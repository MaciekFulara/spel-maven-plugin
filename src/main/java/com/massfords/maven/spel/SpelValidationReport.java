package com.massfords.maven.spel;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.maven.plugin.MojoExecutionException;

import javax.annotation.Generated;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * @author slazarus
 */
public class SpelValidationReport {

    private int checked = 0;

    private int valid = 0;

    private int invalid = 0;

    private final List<String> errors = new ArrayList<>();

    protected SpelValidationReport error(String error) {
        this.errors.add(error);
        ++this.invalid;
        ++this.checked;
        return this;
    }

    protected SpelValidationReport success() {
        ++this.valid;
        ++this.checked;
        return this;
    }


    @Generated("generated by IDE")
    public List<String> getErrors() {
        return errors;
    }

    public boolean hasErrors() {
        return invalid>0;
    }


    public void createReportFile(File file) throws MojoExecutionException {
        if (!file.getParentFile().isDirectory()) {
            //noinspection ResultOfMethodCallIgnored
            file.getParentFile().mkdirs();
        }
        ObjectMapper mapper = new ObjectMapper();
        try {
            mapper.writeValue(file, this);
        } catch (Exception e) {
            throw new MojoExecutionException("Failed to create a report file.", e);
        }
    }

    @Generated("generated by IDE")
    public int getChecked() {
        return checked;
    }

    @Generated("generated by IDE")
    public void setChecked(int checked) {
        this.checked = checked;
    }

    @Generated("generated by IDE")
    public int getValid() {
        return valid;
    }

    @Generated("generated by IDE")
    public void setValid(int valid) {
        this.valid = valid;
    }

    @Generated("generated by IDE")
    public int getInvalid() {
        return invalid;
    }

    @Generated("generated by IDE")
    public void setInvalid(int invalid) {
        this.invalid = invalid;
    }

    public int getErrorCount() {
        return invalid;
    }
}
